When a cell is created, it takes CPUs from the parent cell, C0.
We have to recompute L3 masks for the parent cell, C0.

Legend: # = in set, . = not in set
effective = p->cpus_ptr ∧ cell_mask ∧ L3[9]_mask

CPU idx:    0               16              32              48
            |---------------|<-- L3[9] -->--|---------------|

t0) BEFORE (no Cell 1; Cell 0 == all CPUs)
p->cpus_ptr : [################################################]
cell0_mask  : [################################################]
cell1_mask  : [................(does not exist yet)............]
L3[9]_mask  : [................################................]
effective C0: [................################................]  (NON-EMPTY)

t1a) AFTER Cell 1 created — takes ALL CPUs of L3[9] from Cell 0
p->cpus_ptr : [################################################]
cell0_mask' : [################................################]
cell1_mask  : [................################................]
L3[9]_mask  : [................################................]
effective C0: [................................................]  (EMPTY)
effective C1: [................################................]  (NON-EMPTY)

t1b) AFTER Cell 1 created — takes SOME (right half) of L3[9]
p->cpus_ptr : [################################################]
cell0_mask'':[########################........################]
cell1_mask  : [........................########................]
L3[9]_mask  : [................################................]
effective C0: [................########........................]  (NON-EMPTY, smaller)
effective C1: [........................########................]  (NON-EMPTY)
